from Experiments.MDPParameters import MDPParameters


class Trade3Agents(MDPParameters):

    def __init__(self, decay=0.7, learning_rate=1, delta_weight=0.8, update_function="difference_update", epsilon_convergence=0.1, steps=100, lookahead_depth=2, first_state=0, use_oracle=True):
        MDPParameters.__init__(self)
        self.decay = decay
        self.learning_rate = learning_rate
        self.delta_weight = delta_weight
        self.update_function = update_function
        self.epsilon_convergence = epsilon_convergence
        self.steps = steps
        self.lookahead_depth = lookahead_depth
        self.first_state = first_state
        self.use_oracle = use_oracle

        self.agents = [0, 1, 2]
        self.states = list(range(10))
        self.actions_u = [0,1] # Actions: buy_l_accept, buy_r_refuse
        self.actions_d = [2] # Wait

        self.agent_types = ["repnet", "oracle", "oracle"] # Can be repnet, mdp, oracle, qlearner


        self.objective_transition_model = [
            [  ################ buy_l_accept/buy_l_accept/buy_l_accept ############################
                # ini l/r/acc l/r/acc l/r/acc
                [[0, 1/3,0,0, 0,1/3,0, 1/3,0,0]],
                [[0, 0,0,1, 0,0,0, 0,0,0]],
                [[0, 0,0,1, 0,0,0, 0,0,0]],
                [[1, 0,0,0, 0,0,0, 0,0,0]],
                [[0, 0,0,0, 0,0,1, 0,0,0]],
                [[0, 0,0,0, 0,0,1, 0,0,0]],
                [[1, 0,0,0, 0,0,0, 0,0,0]],
                [[0, 0,0,0, 0,0,0, 0,0,1]],
                [[0, 0,0,0, 0,0,0, 0,0,1]],
                [[1, 0,0,0, 0,0,0, 0,0,0]]
            ],

            [  ################ buy_l_accept/buy_l_accept/buy_r_refuse ############################
                [[0, 1/3,0,0, 0,1/3,0, 0,1/3,0]],
                [[0, 0,0,1, 0,0,0, 0,0,0]],
                [[1, 0,0,0, 0,0,0, 0,0,0]],
                [[1, 0,0,0, 0,0,0, 0,0,0]],
                [[0, 0,0,0, 0,0,1, 0,0,0]],
                [[1, 0,0,0, 0,0,0, 0,0,0]],
                [[1, 0,0,0, 0,0,0, 0,0,0]],
                [[0, 0,0,0, 0,0,0, 0,0,1]],
                [[0, 0,0,0, 0,0,0, 0,0,1]],
                [[1, 0,0,0, 0,0,0, 0,0,0]]
            ],

            [  ################ buy_l_accept/buy_r_refuse/buy_l_accept ############################
                [[0, 1/3,0,0, 1/3,0,0, 1/3,0,0]],
                [[1, 0,0,0, 0,0,0, 0,0,0]],
                [[0, 0,0,1, 0,0,0, 0,0,0]],
                [[1, 0,0,0, 0,0,0, 0,0,0]],
                [[0, 0,0,0, 0,0,1, 0,0,0]],
                [[0, 0,0,0, 0,0,1, 0,0,0]],
                [[1, 0,0,0, 0,0,0, 0,0,0]],
                [[0, 0,0,0, 0,0,0, 0,0,1]],
                [[1, 0,0,0, 0,0,0, 0,0,0]],
                [[1, 0,0,0, 0,0,0, 0,0,0]]
            ],

            [  ################ buy_l_accept/buy_r_refuse/buy_r_refuse ############################
                [[0, 1/3,0,0, 1/3,0,0, 0,1/3,0]],
                [[1, 0,0,0, 0,0,0, 0,0,0]],
                [[1, 0,0,0, 0,0,0, 0,0,0]],
                [[1, 0,0,0, 0,0,0, 0,0,0]],
                [[0, 0,0,0, 0,0,1, 0,0,0]],
                [[1, 0,0,0, 0,0,0, 0,0,0]],
                [[1, 0,0,0, 0,0,0, 0,0,0]],
                [[0, 0,0,0, 0,0,0, 0,0,1]],
                [[1, 0,0,0, 0,0,0, 0,0,0]],
                [[1, 0,0,0, 0,0,0, 0,0,0]]
            ],


            [  ################ buy_r_refuse/buy_l_accept/buy_l_accept ############################
                [[0, 0,1/3,0, 0,1/3,0, 1/3,0,0]],
                [[0, 0,0,1, 0,0,0, 0,0,0]],
                [[0, 0,0,1, 0,0,0, 0,0,0]],
                [[1, 0,0,0, 0,0,0, 0,0,0]],
                [[1, 0,0,0, 0,0,0, 0,0,0]],
                [[0, 0,0,0, 0,0,1, 0,0,0]],
                [[1, 0,0,0, 0,0,0, 0,0,0]],
                [[1, 0,0,0, 0,0,0, 0,0,0]],
                [[0, 0,0,0, 0,0,0, 0,0,1]],
                [[1, 0,0,0, 0,0,0, 0,0,0]]
            ],

            [  ################ buy_r_refuse/buy_l_accept/buy_r_refuse ############################
                [[0, 0,1/3,0, 0,1/3,0, 0,1/3,0]],
                [[0, 0,0,1, 0,0,0, 0,0,0]],
                [[1, 0,0,0, 0,0,0, 0,0,0]],
                [[1, 0,0,0, 0,0,0, 0,0,0]],
                [[1, 0,0,0, 0,0,0, 0,0,0]],
                [[1, 0,0,0, 0,0,0, 0,0,0]],
                [[1, 0,0,0, 0,0,0, 0,0,0]],
                [[1, 0,0,0, 0,0,0, 0,0,0]],
                [[0, 0,0,0, 0,0,0, 0,0,1]],
                [[1, 0,0,0, 0,0,0, 0,0,0]]
            ],

            [  ################ buy_r_refuse/buy_r_refuse/buy_l_accept ############################
                [[0, 0,1/3,0, 1/3,0,0, 1/3,0,0]],
                [[1, 0,0,0, 0,0,0, 0,0,0]],
                [[0, 0,0,1, 0,0,0, 0,0,0]],
                [[1, 0,0,0, 0,0,0, 0,0,0]],
                [[1, 0,0,0, 0,0,0, 0,0,0]],
                [[0, 0,0,0, 0,0,1, 0,0,0]],
                [[1, 0,0,0, 0,0,0, 0,0,0]],
                [[1, 0,0,0, 0,0,0, 0,0,0]],
                [[1, 0,0,0, 0,0,0, 0,0,0]],
                [[1, 0,0,0, 0,0,0, 0,0,0]]
            ],

            [  ################ buy_r_refuse/buy_r_refuse/buy_r_refuse ############################
                [[0, 0,1/3,0, 1/3,0,0, 0,1/3,0]],
                [[1, 0,0,0, 0,0,0, 0,0,0]],
                [[1, 0,0,0, 0,0,0, 0,0,0]],
                [[1, 0,0,0, 0,0,0, 0,0,0]],
                [[1, 0,0,0, 0,0,0, 0,0,0]],
                [[1, 0,0,0, 0,0,0, 0,0,0]],
                [[1, 0,0,0, 0,0,0, 0,0,0]],
                [[1, 0,0,0, 0,0,0, 0,0,0]],
                [[1, 0,0,0, 0,0,0, 0,0,0]],
                [[1, 0,0,0, 0,0,0, 0,0,0]]
            ]
        ]


        # Actions: buy_l_accept, buy_r_refuse, wait
        # Impact(agent1, agent2, state, action_performed_by_agent2)
        self.impact_function = [
            [
                [[1,1,0],      [0,0,1], [0,0,1], [1,1,1],        [1,-1,0], [0,0,0], [0,0,0],        [1,-1,0], [0,0,0], [0,0,0]],
                [[0,0.05,0],    [0.3,-1,0], [0,0,0], [0,0,0],       [0,0,0], [0,0,0], [0,0,0],         [0,0,0], [0.9,-1,0], [0,0,0]],
                [[0.05,0,0],    [0,0,0], [0.3,-1,0], [0,0,0],       [0,0,0], [0.9,-1,0], [0,0,0],    [0,0,0], [0,0,0], [0,0,0]]
            ],

            [
                [[0,0,0], [0,0,0], [0,0,0], [0,0,0], [0,0,0], [0,0,0], [0,0,0], [0,0,0], [0,0,0], [0,0,0]],
                [[1,1,0], [0,0,0], [0,0,0], [0,0,0], [0,0,1], [0,0,1], [1,1,1], [0,0,0], [0,0,0], [0,0,0]],
                [[0,0,0], [0,0,0], [0,0,0], [0,0,0], [0,0,0], [0,0,0], [0,0,0], [0,0,0], [0,0,0], [0,0,0]]
            ],

            [
                [[0,0,0], [0,0,0], [0,0,0], [0,0,0], [0,0,0], [0,0,0], [0,0,0], [0,0,0], [0,0,0], [0,0,0]],
                [[0,0,0], [0,0,0], [0,0,0], [0,0,0], [0,0,0], [0,0,0], [0,0,0], [0,0,0], [0,0,0], [0,0,0]],
                [[1,1,0], [0,0,0], [0,0,0], [0,0,0], [0,0,0], [0,0,0], [0,0,0], [0,0,1], [0,0,1], [1,1,1]]
            ]
        ]

        self.restrictions = [
            [(1,2), (2,2)], # In states 2 and 3, agent 1 must pick a directed transition
            [(4,2), (5,2)],
            [(7,2), (8,2)]
        ]

        self.directed_undirected_equivalence = [
            [(2,0)], # To the outside system, "wait" is equivalent to do nothing
            [(2,0)],
            [(2,0)]
        ]

         # wait_for_A
        self.directed_transition_models = [
            # Agent 1
            [
                [[[0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0]]          ],
                [[[0.5,0.5,0.5,0.5,0.5], [0,0,0,0,0], [0,0,0,0,0], [0.5,0.5,0.5,0.5,0.5], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0]]          ],
                [[[0.5,0.5,0.5,0.5,0.5], [0,0,0,0,0], [0,0,0,0,0], [0.5,0.5,0.5,0.5,0.5], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0]]          ],
                [[[0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0]]          ],
                [[[0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0]]          ],
                [[[0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0]]          ],
                [[[0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0]]          ],
                [[[0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0]]          ],
                [[[0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0]]          ],
                [[[0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0]]          ]
            ],

            # Agent 2
            [
                [[[0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0]]          ],
                [[[0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0]]          ],
                [[[0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0]]          ],
                [[[0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0]]          ],
                [[[0.5,0.5,0.5,0.5,0.5], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0.5,0.5,0.5,0.5,0.5], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0]]          ],
                [[[0.5,0.5,0.5,0.5,0.5], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0.5,0.5,0.5,0.5,0.5], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0]]          ],
                [[[0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0]]          ],
                [[[0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0]]          ],
                [[[0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0]]          ],
                [[[0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0]]          ]
            ],

            # Agent 3
            [
                [[[0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0]]          ],
                [[[0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0]]          ],
                [[[0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0]]          ],
                [[[0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0]]          ],
                [[[0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0]]          ],
                [[[0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0]]          ],
                [[[0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0]]          ],
                [[[0.5,0.5,0.5,0.5,0.5], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0.5,0.5,0.5,0.5,0.5]]          ],
                [[[0.5,0.5,0.5,0.5,0.5], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0.5,0.5,0.5,0.5,0.5]]          ],
                [[[0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0]]          ]
            ]
        ]
